<!-- Global headers -->
<%- include('components/_head.ejs'); %>
<!-- Global headers -->

<!-- Main interface -->
<div class="container">
  <!-- Player data -->
  <div class="container-playerData">
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="row">
              <h3>Player: <%- playerData.name%></h3>
            </div>
            <div class="row">
              <h6 id="timeCounter">Go!</h6>
            </div>
            <div class="row">
              <button
                type="button"
                class="btn btn-primary"
                id="checkRanking1"
                style="display: none"
                data-bs-toggle="modal"
                data-bs-target="#staticBackdrop"
              >
                Check the ranking again
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Playground -->
  <div class="container-playGround">
    <div class="card">
      <div class="card-body">
        <div class="p-3 bg-light">
          <table class="table table-bordered">
            <tbody>
              <% for (var i=0;i< category;i++){%>
              <tr>
                <% for (var j=0;j< category;j++){%>
                <td>

                  <div class="scene scene--card">
                    <div class="card-flipper" onclick="flipCard(this.id)" id="pic-<%-[j+i*category]%>">
                      <div class="card__face card__face--front"></div>
                      <div class="card__face card__face--back"><img src="<%-pictureSet[j+i*category].urlPicture%>" style="width: 200px; height: 200px"/></div>
                    </div>
                  </div>
                </td>
                <%}%>
              </tr>
              <%}%>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div
  class="modal fade"
  id="staticBackdrop"
  data-bs-backdrop="static"
  data-bs-keyboard="false"
  tabindex="-1"
  aria-labelledby="staticBackdropLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="staticBackdropLabel">
          Congratulations! you finish this round
        </h4>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6">
            <p class="text-primary fs-5" id="playerScore"></p>
          </div>
          <div class="col-md-6">
            <p class="text-primary fs-5" id="playerTime"></p>
          </div>
        </div>
        <div class="row">
          <h6>Other players records</h6>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>#</th>
                <th>Player</th>
                <th>Category</th>
                <th>Wrong ones</th>
                <th>Time</th>
              </tr>
            </thead>
            <tbody>
              <% for(var i=0;i< rankList.length; i++ ){%>
                <tr>
                  <td><%-[i+1]%></td>
                  <td><%-rankList[i].name%></td>
                  <td><%-rankList[i].category%>x<%-rankList[i].category%></td>
                  <td><%-rankList[i].score%></td>
                  <td>
                    <%-new Date(rankList[i].time).toISOString().substring(11,19)%>
                  </td>
                </tr>
                <%}%>
            </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
        <button typo="button" class="btn btn-info" onclick="goToSelection()">
          Change category
        </button>
        <button type="button" class="btn btn-primary" onclick="reloadPage()">
          I'll take another one!
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Script section -->
<script>

// Set initials variables
var stopCounter = false;
var gameTime = 0;

const playerPerformance={"matched":0,"failed":0};
var tempResults=[];


  // Start when DOM is loaded
  document.addEventListener("DOMContentLoaded", function (event) {
    // Initiate time counting
    timeCounter();
  });

  // Count and update time counter element
  function timeCounter() {
    var startTime = new Date().getTime();
    var counter = setInterval(() => {
      if (stopCounter) {
        clearInterval(counter);
      } else {
        var now = new Date().getTime();
        var diffTime = now - startTime;
        var lastingTime = new Date(diffTime).toISOString().substring(11, 19);
        document.getElementById("timeCounter").innerHTML = lastingTime;
        gameTime = diffTime;
      }
    }, 1000);
  }

function flipCard(id){
  var imgElem = document.getElementById(id);
  if(!imgElem.className.includes('is-flipped')){
  // Slip the card to show its pictures
  imgElem.classList.toggle('is-flipped');
  
  // Apply a 1.5 sec delay to allow player in case of wrong pair
  setTimeout(()=>{resultComparition(id)},1500)
  // resultComparition(id)
}
}

  function resultComparition(id){
    var imgElem = document.getElementById(id);
    imgURL=imgElem.getElementsByTagName("img")[0].src;
    tempResults.push({id:id,imgURL:imgURL});
    
    if(tempResults.length==2){
      if(tempResults[0].imgURL==tempResults[1].imgURL){
        // Send feedback about correct match
        playerPerformance.matched+=1;

        var gameLimit=<%- pictureSet.length %>/2

        if(playerPerformance.matched==gameLimit){
          
          var quizScore=playerPerformance.failed;
          finishGame(quizScore);
        }        

      } else{
        // Send feedback about wrong match
        playerPerformance.failed+=1;

        // tempResults.map(elem=>{
        // var imgElem = document.getElementById(elem.id);
        // imgElem.setAttribute("style","border: 5px solid red;");
        // })

        // Flip back both cards
        tempResults.map(elem=>{
        var imgElem = document.getElementById(elem.id);
        imgElem.classList.toggle('is-flipped');
        })
        

      }
      tempResults=[];
    }
  }

  function finishGame(quizScore){

    // Turn off time counter
    stopCounter=true;

    // Scroll back to the beginning
    window.scrollTo(0,0);
    document.getElementById("checkRanking1").style.display = "block";

    var playerName=<%- JSON.stringify(playerData.name)%>;
    var quizTime=gameTime;
    var category=<%-category%>;

    saveResults(playerName,quizTime,quizScore,category)

    var resultModal=new bootstrap.Modal(document.getElementById("staticBackdrop"),{backdrop:'static',keyboard: false});
    resultModal.toggle();
  }

  function saveResults(playerName,quizTime,quizScore,category){

    // Setting http requests
    let xhr = new XMLHttpRequest();
    xhr.open("POST", "/checkQuiz", true);
    xhr.setRequestHeader("Content-Type", "application/json");

    // Update players records with current run information
    var reqBody= Object.assign({},[]);
    reqBody.playerName=playerName;
    reqBody.quizTime=quizTime;
    reqBody.quizScore=quizScore;
    reqBody.category=category;

    xhr.onload = () => {};

    xhr.send(JSON.stringify(reqBody));

    // Set player run info on results modal
    document.getElementById("playerScore").innerHTML="You've mistaken: " + quizScore + ' times'
    document.getElementById("playerTime").innerHTML='Your time was: ' + new Date(quizTime).toISOString().substring(11,19);
  }


  function reloadPage() {
    location.reload();
  }

  function goToSelection() {
    window.location.href = "/";
  }
</script>

<!-- Global footers -->
<%- include('components/_footer.ejs'); %>